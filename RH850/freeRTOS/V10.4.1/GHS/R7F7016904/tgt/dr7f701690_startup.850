-------------------------------------------------------------------------------
-- Module      = dr7f701690_startup.850
-- Version     = V1.20
--               extracted from device file dr7f701690.dvf 
--               by DeFiXRH850 1.0.2.0
-------------------------------------------------------------------------------
--                                  COPYRIGHT
-------------------------------------------------------------------------------
-- Copyright (c) 2018 by Renesas Electronics Europe GmbH,
--               a company of the Renesas Electronics Corporation
-------------------------------------------------------------------------------
-- Purpose:      Startup Code
--
-------------------------------------------------------------------------------
--
-- Warranty Disclaimer
--
-- Because the Product(s) is licensed free of charge, there is no warranty
-- of any kind whatsoever and expressly disclaimed and excluded by Renesas,
-- either expressed or implied, including but not limited to those for
-- non-infringement of intellectual property, merchantability and/or
-- fitness for the particular purpose.
-- Renesas shall not have any obligation to maintain, service or provide bug
-- fixes for the supplied Product(s) and/or the Application.
--
-- Each User is solely responsible for determining the appropriateness of
-- using the Product(s) and assumes all risks associated with its exercise
-- of rights under this Agreement, including, but not limited to the risks
-- and costs of program errors, compliance with applicable laws, damage to
-- or loss of data, programs or equipment, and unavailability or
-- interruption of operations.
--
-- Limitation of Liability
--
-- In no event shall Renesas be liable to the User for any incidental,
-- consequential, indirect, or punitive damage (including but not limited
-- to lost profits) regardless of whether such liability is based on breach
-- of contract, tort, strict liability, breach of warranties, failure of
-- essential purpose or otherwise and even if advised of the possibility of
-- such damages. Renesas shall not be liable for any services or products
-- provided by third party vendors, developers or consultants identified or
-- referred to the User by Renesas in connection with the Product(s) and/or
-- the Application.
--
-------------------------------------------------------------------------------
-- Environment:
--              Device:         R7F701690   
--              IDE:            GHS Multi for V800  V6.xx or later
-------------------------------------------------------------------------------

-------------------------------------------------------------------------------
-------------  Selection of external interrupt service handler
-------------  User modifiable section
-------------  Please uncomment the required interrupt service handler
-------------------------------------------------------------------------------
#include <dr7f701690_IRQ.h>

-------------------------------------------------------------------------------
-------------  Basic Initialisation of the controller
-------------  User modifiable section
-------------------------------------------------------------------------------
  .weak	___lowinit
  .weak	___ghs_rramstart
  .set   EBV,  0x8000
  .set   RESF, 0xFFF80760
  .text
_RESET:
  -- Initialization of the global pointer
  mov     __gp, gp

  -- Initialization of the text pointer
  mov     __tp, r5

  -- Initialization of the stack pointer
  movhi	hi(___ghsend_stack),zero,sp
  movea	lo(___ghsend_stack),sp,sp

  -- 4-byte stack alignment
  mov -4,r1
  and r1,sp

  -- Initialization of the interrupt base pointer
  mov __ex_entry + IRQ_TABLE_START,r1
  ldsr r1,intbp,1

  -- First set EBASE register address
  mov __ex_entry, r10
  -- set 0x0 or 0x1 to EBASE.RINT for reduced interrupt 
  -- ori  1, r10
  ldsr r10, EBASE, 1
  -- then set 1 to PSW.EBV -> RBASE!=EBASE
  stsr PSW, r10, 0
  mov  EBV, r11
  or   r11, r10
  ldsr r10, PSW, 0

  -- Jump to the HW initialisation function
  jarl	___lowinit, lp

  -- Clear local RAM
  -- destroys any content in local RAM/ECC initialization
  -- Also SP is cleared.
  mov   ___ghs_ramstart, r6   -- start of local RAM
  mov   ___ghs_rramstart, r7  -- start of retention RAM
  cmp   r7, r6                -- is only retention RAM available?
  be    EXIT_L_RAM_CLEAN                    -- skip initialization of RAM

  mov   ___ghs_ramend, r7     -- load end of local RAM
  mov   r0, r1
L_RAM_CLEAN:
  st.dw r0, 0[r6]
  addi  8, r6, r6
  cmp   r7, r6
  bl    L_RAM_CLEAN
EXIT_L_RAM_CLEAN:

  -- Check if deep stop mode Reset occured or not
  mov   RESF,r6
  ld.w  0[r6],r7
  andi  0x400,r7,r8
  cmp   0x400,r8                -- Check if deep stop mode Reset occured or not, RESF-bit-10
  be    EXIT_R_RAM_CLEAN                    -- skip initialization of R-RAM

  -- Clear local Retention RAM
  mov   ___ghs_rramstart, r6   -- start of local R-RAM
  mov   ___ghs_rramend, r7  -- start of retention R-RAM
  mov   r0, r1
R_RAM_CLEAN:
  st.dw r0, 0[r6]
  addi  8, r6, r6
  cmp   r7, r6
  bl    R_RAM_CLEAN
EXIT_R_RAM_CLEAN:

  -- Jump to the initialisation functions of the library
  -- and from there to main()
  jr __start
-------------------------------------------------------------------------------

-------------------------------------------------------------------------------
-------------  Interrupt service routine of unused interrupts
  .global  __unused_isr
__unused_isr:
  br	__unused_isr
-------------------------------------------------------------------------------

-------------------------------------------------------------------------------
-------------  Add section ".intvect" to your linker command file
-------------  at address 0x0000
-------------
-------------	i.e.	.intvect    0x0000:
-------------------------------------------------------------------------------
.section".intvect",.text

-------------------------------------------------------------------------------
-------------  Initializing of interrupt vector table
-------------  Please don't modify this section
-------------------------------------------------------------------------------

  .global _RESET
__ex_entry:
    .offset 0x0000
  #if (RESET_ENABLE > 0x00000000)
    .extern _RESET
    jr _RESET
  #else
    jr __unused_isr
  #endif

#ifdef __OS_HANDLES__      

/* OS interrupt code can be added here */

#else /* __OS_HANDLES__ */ 

__isr_prio_entry:
    .offset 0x0010
  #if (SYSERR_ENABLE > 0x00000000)
    .extern _SYSERR
    jr _SYSERR
  #else
    jr __unused_isr
  #endif

    .offset 0x0030
  #if (FETRAPEX_ENABLE > 0x00000000)
    .extern _FETRAPEX
    jr _FETRAPEX
  #else
    jr __unused_isr
  #endif

    .offset 0x0040
  #if (EITRAP0_ENABLE > 0x00000000)
    .extern _vPortYield
    jr _vPortYield
  #else
    jr __unused_isr
  #endif

    .offset 0x0050
  #if (EITRAP1_ENABLE > 0x00000000)
    .extern _EITRAP1
    jr _EITRAP1
  #else
    jr __unused_isr
  #endif

    .offset 0x0060
  #if (RIEX_ENABLE > 0x00000000)
    .extern _RIEX
    jr _RIEX
  #else
    jr __unused_isr
  #endif

    .offset 0x0080
  #if (UCPOP_ENABLE > 0x00000000)
    .extern _UCPOP
    jr _UCPOP
  #else
    jr __unused_isr
  #endif

    .offset 0x0090
  #if (MIP_MDP_ENABLE > 0x00000000)
    .extern _MIP_MDP
    jr _MIP_MDP
  #else
    jr __unused_isr
  #endif

    .offset 0x00a0
  #if (PIE_ENABLE > 0x00000000)
    .extern _PIE
    jr _PIE
  #else
    jr __unused_isr
  #endif

    .offset 0x00c0
  #if (MAE_MAEX_ENABLE > 0x00000000)
    .extern _MAE_MAEX
    jr _MAE_MAEX
  #else
    jr __unused_isr
  #endif

    .offset 0x00e0
  #if (FENMI_ENABLE > 0x00000000)
    .extern _FENMI
    jr _FENMI
  #else
    jr __unused_isr
  #endif

    .offset 0x00f0
  #if (FEINT_ENABLE > 0x00000000)
    .extern _FEINT
    jr _FEINT
  #else
    jr __unused_isr
  #endif

    .offset 0x0100
  #if (EINTPRIO_0_ENABLE > 0x00000000)
    .extern _EINTPRIO_0
    jr _EINTPRIO_0
  #else
    jr __unused_isr
  #endif

    .offset 0x0110
  #if (EINTPRIO_1_ENABLE > 0x00000000)
    .extern _EINTPRIO_1
    jr _EINTPRIO_1
  #else
    jr __unused_isr
  #endif

    .offset 0x0120
  #if (EINTPRIO_2_ENABLE > 0x00000000)
    .extern _EINTPRIO_2
    jr _EINTPRIO_2
  #else
    jr __unused_isr
  #endif

    .offset 0x0130
  #if (EINTPRIO_3_ENABLE > 0x00000000)
    .extern _EINTPRIO_3
    jr _EINTPRIO_3
  #else
    jr __unused_isr
  #endif

    .offset 0x0140
  #if (EINTPRIO_4_ENABLE > 0x00000000)
    .extern _EINTPRIO_4
    jr _EINTPRIO_4
  #else
    jr __unused_isr
  #endif

    .offset 0x0150
  #if (EINTPRIO_5_ENABLE > 0x00000000)
    .extern _EINTPRIO_5
    jr _EINTPRIO_5
  #else
    jr __unused_isr
  #endif

    .offset 0x0160
  #if (EINTPRIO_6_ENABLE > 0x00000000)
    .extern _EINTPRIO_6
    jr _EINTPRIO_6
  #else
    jr __unused_isr
  #endif

    .offset 0x0170
  #if (EINTPRIO_7_ENABLE > 0x00000000)
    .extern _EINTPRIO_7
    jr _EINTPRIO_7
  #else
    jr __unused_isr
  #endif

    .offset 0x0180
  #if (EINTPRIO_8_ENABLE > 0x00000000)
    .extern _EINTPRIO_8
    jr _EINTPRIO_8
  #else
    jr __unused_isr
  #endif

    .offset 0x0190
  #if (EINTPRIO_9_ENABLE > 0x00000000)
    .extern _EINTPRIO_9
    jr _EINTPRIO_9
  #else
    jr __unused_isr
  #endif

    .offset 0x01a0
  #if (EINTPRIO_10_ENABLE > 0x00000000)
    .extern _EINTPRIO_10
    jr _EINTPRIO_10
  #else
    jr __unused_isr
  #endif

    .offset 0x01b0
  #if (EINTPRIO_11_ENABLE > 0x00000000)
    .extern _EINTPRIO_11
    jr _EINTPRIO_11
  #else
    jr __unused_isr
  #endif

    .offset 0x01c0
  #if (EINTPRIO_12_ENABLE > 0x00000000)
    .extern _EINTPRIO_12
    jr _EINTPRIO_12
  #else
    jr __unused_isr
  #endif

    .offset 0x01d0
  #if (EINTPRIO_13_ENABLE > 0x00000000)
    .extern _EINTPRIO_13
    jr _EINTPRIO_13
  #else
    jr __unused_isr
  #endif

    .offset 0x01e0
  #if (EINTPRIO_14_ENABLE > 0x00000000)
    .extern _EINTPRIO_14
    jr _EINTPRIO_14
  #else
    jr __unused_isr
  #endif

    .offset 0x01f0
  #if (EINTPRIO_15_ENABLE > 0x00000000)
    .extern _EINTPRIO_15
    jr _EINTPRIO_15
  #else
    jr __unused_isr
  #endif

    .offset (IRQ_TABLE_START)
_irq_table_start:
    .offset (IRQ_TABLE_START+0x0020)
  #if (INTTAUD0I0_ENABLE > 0x00000000)
    .extern _INTTAUD0I0
    .word _INTTAUD0I0
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0024)
  #if (INTTAUD0I2_ENABLE > 0x00000000)
    .extern _INTTAUD0I2
    .word _INTTAUD0I2
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0028)
  #if (INTTAUD0I4_ENABLE > 0x00000000)
    .extern _INTTAUD0I4
    .word _INTTAUD0I4
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x002c)
  #if (INTTAUD0I6_ENABLE > 0x00000000)
    .extern _INTTAUD0I6
    .word _INTTAUD0I6
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0030)
  #if (INTTAUD0I8_ENABLE > 0x00000000)
    .extern _INTTAUD0I8
    .word _INTTAUD0I8
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0034)
  #if (INTTAUD0I10_ENABLE > 0x00000000)
    .extern _INTTAUD0I10
    .word _INTTAUD0I10
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0038)
  #if (INTTAUD0I12_ENABLE > 0x00000000)
    .extern _INTTAUD0I12
    .word _INTTAUD0I12
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x003c)
  #if (INTTAUD0I14_ENABLE > 0x00000000)
    .extern _INTTAUD0I14
    .word _INTTAUD0I14
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0040)
  #if (INTTAPA0IPEK0_ENABLE > 0x00000000)
    .extern _INTTAPA0IPEK0
    .word _INTTAPA0IPEK0
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0044)
  #if (INTTAPA0IVLY0_ENABLE > 0x00000000)
    .extern _INTTAPA0IVLY0
    .word _INTTAPA0IVLY0
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0048)
  #if (INTADCA0I0_ENABLE > 0x00000000)
    .extern _INTADCA0I0
    .word _INTADCA0I0
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x004c)
  #if (INTADCA0I1_ENABLE > 0x00000000)
    .extern _INTADCA0I1
    .word _INTADCA0I1
  #else
    .word __unused_isr
  #endif

  #if (INTCSIH0IJC_1_ENABLE > 0x00000000)
    .extern _INTCSIH0IJC_1
    .word _INTCSIH0IJC_1
  #endif
  #if (INTADCA0I2_ENABLE > 0x00000000)
    .extern _INTADCA0I2
    .word _INTADCA0I2
  #endif
  #if (  (INTCSIH0IJC_1_ENABLE == 0x00000000)  &&  (INTADCA0I2_ENABLE == 0x00000000) )
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0054)
  #if (INTDCUTDI_ENABLE > 0x00000000)
    .extern _INTDCUTDI
    .word _INTDCUTDI
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0058)
  #if (INTRCANGERR0_ENABLE > 0x00000000)
    .extern _INTRCANGERR0
    .word _INTRCANGERR0
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x005c)
  #if (INTRCANGRECC0_ENABLE > 0x00000000)
    .extern _INTRCANGRECC0
    .word _INTRCANGRECC0
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0060)
  #if (INTRCAN0ERR_ENABLE > 0x00000000)
    .extern _INTRCAN0ERR
    .word _INTRCAN0ERR
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0064)
  #if (INTRCAN0REC_ENABLE > 0x00000000)
    .extern _INTRCAN0REC
    .word _INTRCAN0REC
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0068)
  #if (INTRCAN0TRX_ENABLE > 0x00000000)
    .extern _INTRCAN0TRX
    .word _INTRCAN0TRX
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x006c)
  #if (INTCSIG0IC_ENABLE > 0x00000000)
    .extern _INTCSIG0IC
    .word _INTCSIG0IC
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0070)
  #if (INTCSIG0IR_ENABLE > 0x00000000)
    .extern _INTCSIG0IR
    .word _INTCSIG0IR
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0074)
  #if (INTCSIH0IC_ENABLE > 0x00000000)
    .extern _INTCSIH0IC
    .word _INTCSIH0IC
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0078)
  #if (INTCSIH0IR_ENABLE > 0x00000000)
    .extern _INTCSIH0IR
    .word _INTCSIH0IR
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x007c)
  #if (INTCSIH0IRE_ENABLE > 0x00000000)
    .extern _INTCSIH0IRE
    .word _INTCSIH0IRE
  #else
    .word __unused_isr
  #endif

  #if (INTADCA0I2_2_ENABLE > 0x00000000)
    .extern _INTADCA0I2_2
    .word _INTADCA0I2_2
  #endif
  #if (INTCSIH0IJC_ENABLE > 0x00000000)
    .extern _INTCSIH0IJC
    .word _INTCSIH0IJC
  #endif
  #if (  (INTADCA0I2_2_ENABLE == 0x00000000)  &&  (INTCSIH0IJC_ENABLE == 0x00000000) )
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0084)
  #if (INTRLIN30_ENABLE > 0x00000000)
    .extern _INTRLIN30
    .word _INTRLIN30
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0088)
  #if (INTRLIN30UR0_ENABLE > 0x00000000)
    .extern _INTRLIN30UR0
    .word _INTRLIN30UR0
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x008c)
  #if (INTRLIN30UR1_ENABLE > 0x00000000)
    .extern _INTRLIN30UR1
    .word _INTRLIN30UR1
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0090)
  #if (INTRLIN30UR2_ENABLE > 0x00000000)
    .extern _INTRLIN30UR2
    .word _INTRLIN30UR2
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0094)
  #if (INTP0_ENABLE > 0x00000000)
    .extern _INTP0
    .word _INTP0
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0098)
  #if (INTP1_ENABLE > 0x00000000)
    .extern _INTP1
    .word _INTP1
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x009c)
  #if (INTP2_ENABLE > 0x00000000)
    .extern _INTP2
    .word _INTP2
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x00a0)
  #if (INTWDTA0_ENABLE > 0x00000000)
    .extern _INTWDTA0
    .word _INTWDTA0
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x00a4)
  #if (INTWDTA1_ENABLE > 0x00000000)
    .extern _INTWDTA1
    .word _INTWDTA1
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x00ac)
  #if (INTP3_ENABLE > 0x00000000)
    .extern _INTP3
    .word _INTP3
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x00b0)
  #if (INTP4_ENABLE > 0x00000000)
    .extern _INTP4
    .word _INTP4
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x00b4)
  #if (INTP5_ENABLE > 0x00000000)
    .extern _INTP5
    .word _INTP5
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x00b8)
  #if (INTP10_ENABLE > 0x00000000)
    .extern _INTP10
    .word _INTP10
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x00bc)
  #if (INTP11_ENABLE > 0x00000000)
    .extern _INTP11
    .word _INTP11
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x00c0)
  #if (INTTAUD0I1_ENABLE > 0x00000000)
    .extern _INTTAUD0I1
    .word _INTTAUD0I1
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x00c4)
  #if (INTTAUD0I3_ENABLE > 0x00000000)
    .extern _INTTAUD0I3
    .word _INTTAUD0I3
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x00c8)
  #if (INTTAUD0I5_ENABLE > 0x00000000)
    .extern _INTTAUD0I5
    .word _INTTAUD0I5
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x00cc)
  #if (INTTAUD0I7_ENABLE > 0x00000000)
    .extern _INTTAUD0I7
    .word _INTTAUD0I7
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x00d0)
  #if (INTTAUD0I9_ENABLE > 0x00000000)
    .extern _INTTAUD0I9
    .word _INTTAUD0I9
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x00d4)
  #if (INTTAUD0I11_ENABLE > 0x00000000)
    .extern _INTTAUD0I11
    .word _INTTAUD0I11
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x00d8)
  #if (INTTAUD0I13_ENABLE > 0x00000000)
    .extern _INTTAUD0I13
    .word _INTTAUD0I13
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x00dc)
  #if (INTTAUD0I15_ENABLE > 0x00000000)
    .extern _INTTAUD0I15
    .word _INTTAUD0I15
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x00e0)
  #if (INTADCA0ERR_ENABLE > 0x00000000)
    .extern _INTADCA0ERR
    .word _INTADCA0ERR
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x00e4)
  #if (INTCSIG0IRE_ENABLE > 0x00000000)
    .extern _INTCSIG0IRE
    .word _INTCSIG0IRE
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x00e8)
  #if (INTRLIN20_ENABLE > 0x00000000)
    .extern _INTRLIN20
    .word _INTRLIN20
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x00ec)
  #if (INTRLIN21_ENABLE > 0x00000000)
    .extern _INTRLIN21
    .word _INTRLIN21
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x00f0)
  #if (INTDMA0_ENABLE > 0x00000000)
    .extern _INTDMA0
    .word _INTDMA0
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x00f4)
  #if (INTDMA1_ENABLE > 0x00000000)
    .extern _INTDMA1
    .word _INTDMA1
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x00f8)
  #if (INTDMA2_ENABLE > 0x00000000)
    .extern _INTDMA2
    .word _INTDMA2
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x00fc)
  #if (INTDMA3_ENABLE > 0x00000000)
    .extern _INTDMA3
    .word _INTDMA3
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0100)
  #if (INTDMA4_ENABLE > 0x00000000)
    .extern _INTDMA4
    .word _INTDMA4
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0104)
  #if (INTDMA5_ENABLE > 0x00000000)
    .extern _INTDMA5
    .word _INTDMA5
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0108)
  #if (INTDMA6_ENABLE > 0x00000000)
    .extern _INTDMA6
    .word _INTDMA6
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x010c)
  #if (INTDMA7_ENABLE > 0x00000000)
    .extern _INTDMA7
    .word _INTDMA7
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0110)
  #if (INTDMA8_ENABLE > 0x00000000)
    .extern _INTDMA8
    .word _INTDMA8
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0114)
  #if (INTDMA9_ENABLE > 0x00000000)
    .extern _INTDMA9
    .word _INTDMA9
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0118)
  #if (INTDMA10_ENABLE > 0x00000000)
    .extern _INTDMA10
    .word _INTDMA10
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x011c)
  #if (INTDMA11_ENABLE > 0x00000000)
    .extern _INTDMA11
    .word _INTDMA11
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0120)
  #if (INTDMA12_ENABLE > 0x00000000)
    .extern _INTDMA12
    .word _INTDMA12
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0124)
  #if (INTDMA13_ENABLE > 0x00000000)
    .extern _INTDMA13
    .word _INTDMA13
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0128)
  #if (INTDMA14_ENABLE > 0x00000000)
    .extern _INTDMA14
    .word _INTDMA14
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x012c)
  #if (INTDMA15_ENABLE > 0x00000000)
    .extern _INTDMA15
    .word _INTDMA15
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0130)
  #if (INTRIIC0TI_ENABLE > 0x00000000)
    .extern _INTRIIC0TI
    .word _INTRIIC0TI
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0134)
  #if (INTRIIC0EE_ENABLE > 0x00000000)
    .extern _INTRIIC0EE
    .word _INTRIIC0EE
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0138)
  #if (INTRIIC0RI_ENABLE > 0x00000000)
    .extern _INTRIIC0RI
    .word _INTRIIC0RI
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x013c)
  #if (INTRIIC0TEI_ENABLE > 0x00000000)
    .extern _INTRIIC0TEI
    .word _INTRIIC0TEI
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0140)
  #if (INTTAUJ0I0_ENABLE > 0x00000000)
    .extern _INTTAUJ0I0
    .word _INTTAUJ0I0
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0144)
  #if (INTTAUJ0I1_ENABLE > 0x00000000)
    .extern _INTTAUJ0I1
    .word _INTTAUJ0I1
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0148)
  #if (INTTAUJ0I2_ENABLE > 0x00000000)
    .extern _INTTAUJ0I2
    .word _INTTAUJ0I2
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x014c)
  #if (INTTAUJ0I3_ENABLE > 0x00000000)
    .extern _INTTAUJ0I3
    .word _INTTAUJ0I3
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0150)
  #if (INTOSTM0_ENABLE > 0x00000000)
    .extern _r_Config_OSTM0_interrupt
    .word _r_Config_OSTM0_interrupt
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0154)
  #if (INTENCA0IOV_ENABLE > 0x00000000)
    .extern _INTENCA0IOV
    .word _INTENCA0IOV
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0158)
  #if (INTENCA0IUD_ENABLE > 0x00000000)
    .extern _INTENCA0IUD
    .word _INTENCA0IUD
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x015c)
  #if (INTENCA0I0_ENABLE > 0x00000000)
    .extern _INTENCA0I0
    .word _INTENCA0I0
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0160)
  #if (INTENCA0I1_ENABLE > 0x00000000)
    .extern _INTENCA0I1
    .word _INTENCA0I1
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0164)
  #if (INTENCA0IEC_ENABLE > 0x00000000)
    .extern _INTENCA0IEC
    .word _INTENCA0IEC
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0168)
  #if (INTKR0_ENABLE > 0x00000000)
    .extern _INTKR0
    .word _INTKR0
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x016c)
  #if (INTQFULL_ENABLE > 0x00000000)
    .extern _INTQFULL
    .word _INTQFULL
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0170)
  #if (INTPWGAG00_ENABLE > 0x00000000)
    .extern _INTPWGAG00
    .word _INTPWGAG00
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x01b8)
  #if (INTFLERR_ENABLE > 0x00000000)
    .extern _INTFLERR
    .word _INTFLERR
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x01bc)
  #if (INTFLENDNM_ENABLE > 0x00000000)
    .extern _INTFLENDNM
    .word _INTFLENDNM
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x01c0)
  #if (INTCWEND_ENABLE > 0x00000000)
    .extern _INTCWEND
    .word _INTCWEND
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x01c4)
  #if (INTRCAN1ERR_ENABLE > 0x00000000)
    .extern _INTRCAN1ERR
    .word _INTRCAN1ERR
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x01c8)
  #if (INTRCAN1REC_ENABLE > 0x00000000)
    .extern _INTRCAN1REC
    .word _INTRCAN1REC
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x01cc)
  #if (INTRCAN1TRX_ENABLE > 0x00000000)
    .extern _INTRCAN1TRX
    .word _INTRCAN1TRX
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x01d0)
  #if (INTTAPA0IPEK0_2_ENABLE > 0x00000000)
    .extern _INTTAPA0IPEK0_2
    .word _INTTAPA0IPEK0_2
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x01d4)
  #if (INTTAPA0IVLY0_2_ENABLE > 0x00000000)
    .extern _INTTAPA0IVLY0_2
    .word _INTTAPA0IVLY0_2
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x01d8)
  #if (INTCSIG0IC_2_ENABLE > 0x00000000)
    .extern _INTCSIG0IC_2
    .word _INTCSIG0IC_2
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x01dc)
  #if (INTCSIG0IR_2_ENABLE > 0x00000000)
    .extern _INTCSIG0IR_2
    .word _INTCSIG0IR_2
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x01e0)
  #if (INTRLIN31_ENABLE > 0x00000000)
    .extern _INTRLIN31
    .word _INTRLIN31
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x01e4)
  #if (INTRLIN31UR0_ENABLE > 0x00000000)
    .extern _INTRLIN31UR0
    .word _INTRLIN31UR0
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x01e8)
  #if (INTRLIN31UR1_ENABLE > 0x00000000)
    .extern _INTRLIN31UR1
    .word _INTRLIN31UR1
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x01ec)
  #if (INTRLIN31UR2_ENABLE > 0x00000000)
    .extern _INTRLIN31UR2
    .word _INTRLIN31UR2
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0210)
  #if (INTTAUD0I0_2_ENABLE > 0x00000000)
    .extern _INTTAUD0I0_2
    .word _INTTAUD0I0_2
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0214)
  #if (INTTAUD0I4_2_ENABLE > 0x00000000)
    .extern _INTTAUD0I4_2
    .word _INTTAUD0I4_2
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0218)
  #if (INTTAUD0I6_2_ENABLE > 0x00000000)
    .extern _INTTAUD0I6_2
    .word _INTTAUD0I6_2
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x021c)
  #if (INTTAUD0I8_2_ENABLE > 0x00000000)
    .extern _INTTAUD0I8_2
    .word _INTTAUD0I8_2
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0278)
  #if (INTTAUD0I2_2_ENABLE > 0x00000000)
    .extern _INTTAUD0I2_2
    .word _INTTAUD0I2_2
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x027c)
  #if (INTTAUD0I10_2_ENABLE > 0x00000000)
    .extern _INTTAUD0I10_2
    .word _INTTAUD0I10_2
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0280)
  #if (INTTAUD0I12_2_ENABLE > 0x00000000)
    .extern _INTTAUD0I12_2
    .word _INTTAUD0I12_2
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0284)
  #if (INTTAUD0I14_2_ENABLE > 0x00000000)
    .extern _INTTAUD0I14_2
    .word _INTTAUD0I14_2
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x02a0)
  #if (INTTAUJ1I0_ENABLE > 0x00000000)
    .extern _INTTAUJ1I0
    .word _INTTAUJ1I0
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x02a4)
  #if (INTTAUJ1I1_ENABLE > 0x00000000)
    .extern _INTTAUJ1I1
    .word _INTTAUJ1I1
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x02a8)
  #if (INTTAUJ1I2_ENABLE > 0x00000000)
    .extern _INTTAUJ1I2
    .word _INTTAUJ1I2
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x02ac)
  #if (INTTAUJ1I3_ENABLE > 0x00000000)
    .extern _INTTAUJ1I3
    .word _INTTAUJ1I3
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0344)
  #if (INTRTCA01S_ENABLE > 0x00000000)
    .extern _INTRTCA01S
    .word _INTRTCA01S
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0348)
  #if (INTRTCA0AL_ENABLE > 0x00000000)
    .extern _INTRTCA0AL
    .word _INTRTCA0AL
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x034c)
  #if (INTRTCA0R_ENABLE > 0x00000000)
    .extern _INTRTCA0R
    .word _INTRTCA0R
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0364)
  #if (INTRCAN2ERR_ENABLE > 0x00000000)
    .extern _INTRCAN2ERR
    .word _INTRCAN2ERR
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0368)
  #if (INTRCAN2REC_ENABLE > 0x00000000)
    .extern _INTRCAN2REC
    .word _INTRCAN2REC
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x036c)
  #if (INTRCAN2TRX_ENABLE > 0x00000000)
    .extern _INTRCAN2TRX
    .word _INTRCAN2TRX
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x03c0)
  #if (INTRIIC1TI_ENABLE > 0x00000000)
    .extern _INTRIIC1TI
    .word _INTRIIC1TI
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x03c4)
  #if (INTRIIC1EE_ENABLE > 0x00000000)
    .extern _INTRIIC1EE
    .word _INTRIIC1EE
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x03c8)
  #if (INTRIIC1RI_ENABLE > 0x00000000)
    .extern _INTRIIC1RI
    .word _INTRIIC1RI
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x03cc)
  #if (INTRIIC1TEI_ENABLE > 0x00000000)
    .extern _INTRIIC1TEI
    .word _INTRIIC1TEI
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0454)
  #if (INTTAUJ2I0_ENABLE > 0x00000000)
    .extern _INTTAUJ2I0
    .word _INTTAUJ2I0
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0458)
  #if (INTTAUJ2I1_ENABLE > 0x00000000)
    .extern _INTTAUJ2I1
    .word _INTTAUJ2I1
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x045c)
  #if (INTTAUJ2I2_ENABLE > 0x00000000)
    .extern _INTTAUJ2I2
    .word _INTTAUJ2I2
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0460)
  #if (INTTAUJ2I3_ENABLE > 0x00000000)
    .extern _INTTAUJ2I3
    .word _INTTAUJ2I3
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0464)
  #if (INTTAUJ3I0_ENABLE > 0x00000000)
    .extern _INTTAUJ3I0
    .word _INTTAUJ3I0
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0468)
  #if (INTTAUJ3I1_ENABLE > 0x00000000)
    .extern _INTTAUJ3I1
    .word _INTTAUJ3I1
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x046c)
  #if (INTTAUJ3I2_ENABLE > 0x00000000)
    .extern _INTTAUJ3I2
    .word _INTTAUJ3I2
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0470)
  #if (INTTAUJ3I3_ENABLE > 0x00000000)
    .extern _INTTAUJ3I3
    .word _INTTAUJ3I3
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x056c)
  #if (INTSENT0SI_ENABLE > 0x00000000)
    .extern _INTSENT0SI
    .word _INTSENT0SI
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0570)
  #if (INTSENT0RI_ENABLE > 0x00000000)
    .extern _INTSENT0RI
    .word _INTSENT0RI
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0574)
  #if (INTSENT1SI_ENABLE > 0x00000000)
    .extern _INTSENT1SI
    .word _INTSENT1SI
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0578)
  #if (INTSENT1RI_ENABLE > 0x00000000)
    .extern _INTSENT1RI
    .word _INTSENT1RI
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0590)
  #if (INTDPE_ENABLE > 0x00000000)
    .extern _INTDPE
    .word _INTDPE
  #else
    .word __unused_isr
  #endif

    .offset (IRQ_TABLE_START+0x0594)
  #if (INTAPE_ENABLE > 0x00000000)
    .extern _INTAPE
    .word _INTAPE
  #else
    .word __unused_isr
  #endif


#endif   /* __OS_HANDLES__ */  

